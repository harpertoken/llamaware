services:
  # Mock AI providers
  mock-together:
    image: nginx:alpine
    container_name: mock-together
    ports:
      - "8081:80"
    volumes:
      - ./tests/mocks/together.conf:/etc/nginx/conf.d/default.conf
      - ./tests/mocks/together_responses:/usr/share/nginx/html
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  mock-cerebras:
    image: nginx:alpine
    container_name: mock-cerebras
    ports:
      - "8082:80"
    volumes:
      - ./tests/mocks/cerebras.conf:/etc/nginx/conf.d/default.conf
      - ./tests/mocks/cerebras_responses:/usr/share/nginx/html
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Ollama mock (HTTP server)
  mock-ollama:
    image: python:3.9
    container_name: mock-ollama
    ports:
      - "11434:11434"
    volumes:
      - ./tests/mocks/mock_ollama.py:/app/mock_ollama.py
    command: python -u /app/mock_ollama.py
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Test runner
  e2e-tests:
    build:
      context: .
      dockerfile: package/docker/Dockerfile
      target: builder  # Build only the builder stage for tests
    container_name: llamaware-e2e-tests
    depends_on:
      mock-together:
        condition: service_healthy
      mock-cerebras:
        condition: service_healthy
      mock-ollama:
        condition: service_healthy
    environment:
      - TOGETHER_API_KEY=test-key
      - CEREBRAS_API_KEY=test-key
      - SERPAPI_KEY=test-key
      - OLLAMA_HOST=http://mock-ollama:11434
      - TEST_MODE=1
      - BUILDKIT_INLINE_CACHE=1  # Enable build cache
    volumes:
      - .:/app
      - /app/build  # Persist build directory between builds
      - /root/.cache  # Cache for build artifacts
    working_dir: /app
    user: root
    # Use a wrapper script to handle exit codes properly
    command: ["bash", "-c", "ulimit -c unlimited && /app/tests/e2e/run_tests_in_docker.sh || touch /app/tests/e2e/.e2e_failed"]
    security_opt:
      - seccomp:unconfined  # For better debugging
    cap_add:
      - SYS_PTRACE  # For debugging
    stop_grace_period: 10s
    stop_signal: SIGTERM
    # Healthcheck that always passes to prevent container from being killed
    healthcheck:
      test: ["CMD", "true"]
      interval: 60s
      timeout: 5s
      retries: 1
    # Prevent the container from restarting on failure
    restart: "no"
    deploy:
      resources:
        limits:
          cpus: '2'  # Limit CPU usage to 2 cores
          memory: 4G  # Increased memory limit
          pids: 1024
    tmpfs:
      - /tmp:exec,mode=1777  # Use tmpfs for temporary files

volumes:
  llamaware_data:
    driver: local