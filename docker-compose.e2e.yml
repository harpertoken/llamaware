services:
  mock-together:
    image: nginx:alpine
    entrypoint: ["/bin/sh", "/start_nginx.sh"]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "--spider", "http://127.0.0.1/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    container_name: mock-together
    environment:
      - MOCK_TYPE=together
    ports:
      - "8081:80"
    volumes:
      - ./tests/mocks/together_responses:/usr/share/nginx/html:ro
      - ./tests/mocks/start_nginx.sh:/start_nginx.sh:ro

  mock-cerebras:
    image: nginx:alpine
    entrypoint: ["/bin/sh", "/start_nginx.sh"]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "--spider", "http://127.0.0.1/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    container_name: mock-cerebras
    environment:
      - MOCK_TYPE=cerebras
    ports:
      - "8082:80"
    volumes:
      - ./tests/mocks/cerebras_responses:/usr/share/nginx/html:ro
      - ./tests/mocks/start_nginx.sh:/start_nginx.sh:ro

  mock-fireworks:
    image: nginx:alpine
    entrypoint: ["/bin/sh", "/start_nginx.sh"]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "--spider", "http://127.0.0.1/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    container_name: mock-fireworks
    environment:
      - MOCK_TYPE=fireworks
    ports:
      - "8083:80"
    volumes:
      - ./tests/mocks/fireworks_responses:/usr/share/nginx/html:ro
      - ./tests/mocks/start_nginx.sh:/start_nginx.sh:ro

  mock-groq:
    image: nginx:alpine
    entrypoint: ["/bin/sh", "/start_nginx.sh"]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "--spider", "http://127.0.0.1/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    container_name: mock-groq
    environment:
      - MOCK_TYPE=groq
    ports:
      - "8084:80"
    volumes:
      - ./tests/mocks/groq_responses:/usr/share/nginx/html:ro
      - ./tests/mocks/start_nginx.sh:/start_nginx.sh:ro

  mock-deepseek:
    image: nginx:alpine
    entrypoint: ["/bin/sh", "/start_nginx.sh"]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "--spider", "http://127.0.0.1/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    container_name: mock-deepseek
    environment:
      - MOCK_TYPE=deepseek
    ports:
      - "8085:80"
    volumes:
      - ./tests/mocks/deepseek_responses:/usr/share/nginx/html:ro
      - ./tests/mocks/start_nginx.sh:/start_nginx.sh:ro

  mock-openai:
    image: nginx:alpine
    entrypoint: ["/bin/sh", "/start_nginx.sh"]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "--spider", "http://127.0.0.1/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    container_name: mock-openai
    environment:
      - MOCK_TYPE=openai
    ports:
      - "8086:80"
    volumes:
      - ./tests/mocks/openai_responses:/usr/share/nginx/html:ro
      - ./tests/mocks/start_nginx.sh:/start_nginx.sh:ro

  mock-ollama:
    image: python:3.9
    container_name: mock-ollama
    ports:
      - "11434:11434"
    volumes:
      - ./tests/mocks/mock_ollama.py:/app/mock_ollama.py:ro
    working_dir: /app
    command: ["python", "-u", "/app/mock_ollama.py"]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "--spider", "http://localhost:11434/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  e2e-tests:
    build:
      context: .
      dockerfile: package/docker/Dockerfile
      target: builder
    container_name: llamaware-e2e-tests
    depends_on:
      - mock-together
      - mock-cerebras
      - mock-fireworks
      - mock-groq
      - mock-deepseek
      - mock-openai
      - mock-ollama
    environment:
      - TOGETHER_API_KEY=test-key
      - CEREBRAS_API_KEY=test-key
      - FIREWORKS_API_KEY=test-key
      - GROQ_API_KEY=test-key
      - DEEPSEEK_API_KEY=test-key
      - OPENAI_API_KEY=test-key
      - SERPAPI_KEY=test-key
      - OLLAMA_HOST=http://mock-ollama:11434
      - TEST_MODE=1
      - BUILDKIT_INLINE_CACHE=1
    volumes:
      - .:/app
      - /app/build
      - /root/.cache
    working_dir: /app
    user: root
    command: ["bash", "-c", "ulimit -c unlimited && /app/tests/e2e/run_tests_in_docker.sh || touch /app/tests/e2e/.e2e_failed"]
    security_opt:
      - seccomp:unconfined
    cap_add:
      - SYS_PTRACE
    stop_grace_period: 10s
    stop_signal: SIGTERM
    healthcheck:
      test: ["CMD", "true"]
      interval: 60s
      timeout: 5s
      retries: 1
    restart: "no"
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
          pids: 1024
    tmpfs:
      - /tmp:exec,mode=1777